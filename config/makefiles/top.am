EXTRA_DIST += \
	KNOWN_PROBLEMS \
	README.ChangeLog \
	RELNOTES

# Tests
basic_tests:
	cd $(top_builddir)/tests && $(MAKE) tests_in

# Let Automake know how to perform basic tests
check-local tests_in:
	$(MAKE) basic_tests

test1 :
	echo "Running built-in test 1"
	cd tests ; $(PERL) ../$(top_srcdir)/tests/Scripts/run-basic-tests.pl built-in 1 $(abinit_srcdir)

test2 :
	echo "Running built-in test 2"
	cd tests ; $(PERL) ../$(top_srcdir)/tests/Scripts/run-basic-tests.pl built-in 2 $(abinit_srcdir)

test3 :
	echo "Running built-in test 3"
	cd tests ; $(PERL) ../$(top_srcdir)/tests/Scripts/run-basic-tests.pl built-in 3 $(abinit_srcdir)

test4 :
	echo "Running built-in test 4"
	cd tests ; $(PERL) ../$(top_srcdir)/tests/Scripts/run-basic-tests.pl built-in 4 $(abinit_srcdir)

test5 :
	echo "Running built-in test 5"
	cd tests ; $(PERL) ../$(top_srcdir)/tests/Scripts/run-basic-tests.pl built-in 5 $(abinit_srcdir)

# ---------------------------------------------------------------------------- #

# Help
help:
	@more $(top_srcdir)/doc/help_make/help_make_top

help_dev dev_help dev:
	@more $(top_srcdir)/doc/help_make/help_make_top_dev

# ---------------------------------------------------------------------------- #

# Install Arch hooks for selected developers
arch_hooks:
	@$(top_srcdir)/extras/arch_hooks/install-arch-hooks $(top_srcdir)

# ---------------------------------------------------------------------------- #

# robodoc-html-x.x.x.tar contains all html files produced by ROBODOC
robodoc:
	rm -rf ,,robodoc robodoc-html && mkdir ,,robodoc
	cp -rf src/defs src/[0-9]* src/main src/lib* ,,robodoc
	cp config/robodoc/robodoc-html.rc ,,robodoc/robodoc.rc
	cd ,,robodoc && rm defs/defs*.in && rm defs/defs*vms && rm defs/interfaces* && robodoc > robodoc.log
	mv -f ,,robodoc/www/robodoc robodoc-html
	tardir=robodoc-html && \
	 $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >robodoc-html-$(VERSION).tar.gz
	rm -rf robodoc-html ,,robodoc

# infos_html-x.x.x.tar contains all html files needed for the Web site
infos_html:
	-rm -fr infos_htm* ,infos*
	cp -fr doc ,infos-$(VERSION)
	cp util/misc/var-file-index.py ,infos-$(VERSION)
	cp -fr KNOWN_PROBLEMS ,infos-$(VERSION)/known_problems
	mkdir ,infos-$(VERSION)/Tests
	mkdir ,infos-$(VERSION)/Tests/Test_fast ,infos-$(VERSION)/Tests/Test_v1 ,infos-$(VERSION)/Tests/Test_v2 
	mkdir ,infos-$(VERSION)/Tests/Test_v3 ,infos-$(VERSION)/Tests/Test_v4 ,infos-$(VERSION)/Tests/Test_v5 
	cp -fr tests/fast/Input ,infos-$(VERSION)/Tests/Test_fast
	cp -fr tests/v1/Input ,infos-$(VERSION)/Tests/Test_v1
	cp -fr tests/v2/Input ,infos-$(VERSION)/Tests/Test_v2
	cp -fr tests/v3/Input ,infos-$(VERSION)/Tests/Test_v3
	cp -fr tests/v4/Input ,infos-$(VERSION)/Tests/Test_v4
	cp -fr tests/v5/Input ,infos-$(VERSION)/Tests/Test_v5	
	cd ,infos-$(VERSION) ; python var-file-index.py
	cp ,infos-$(VERSION)/developers/contributing.html ,infos-$(VERSION)
	-rm -f ,infos-$(VERSION)/features/features.html ,infos-$(VERSION)/release_notes/release_notes.html ,infos-$(VERSION)/installation_notes/install.html
	cp -fr ,infos-$(VERSION)/features/features_v$(ABINIT_VERSION_MAJOR).$(ABINIT_VERSION_MINOR).html ,infos-$(VERSION)/features/features.html
	cp -fr ,infos-$(VERSION)/release_notes/rel*_v$(ABINIT_VERSION_MAJOR).$(ABINIT_VERSION_MINOR).html ,infos-$(VERSION)/release_notes/release_notes.html
	cp -fr ,infos-$(VERSION)/inst*_notes/inst*_v$(ABINIT_VERSION_MAJOR).$(ABINIT_VERSION_MINOR).html ,infos-$(VERSION)/install_notes/install.html
	tar -cvf infos_html-$(VERSION).tar                \
          ,infos-$(VERSION)/Tests \
          ,infos-$(VERSION)/input_variables ,infos-$(VERSION)/users ,infos-$(VERSION)/tutorial ,infos-$(VERSION)/known_problems \
          ,infos-$(VERSION)/gallery/Plot1.jpg ,infos-$(VERSION)/gallery/pcpm.gif ,infos-$(VERSION)/gallery/mode.png  \
          ,infos-$(VERSION)/*/*.css \
          ,infos-$(VERSION)/install_notes/install.html \
          ,infos-$(VERSION)/release_notes/release_notes.html \
          ,infos-$(VERSION)/features/features.html \
          ,infos-$(VERSION)/presentation/presentation.pdf
	gzip infos_html-$(VERSION).tar
	-rm -fr ,infos-$(VERSION)

#Run abilint
run_abilint :
	python util/maintainers/abilint.py --graph=directories . .

# Prepare the theory documents
theory :
	cd doc/theory ; \
         latex geometry.tex ; latex geometry.tex ; dvips -f geometry.dvi > geometry.ps ; ps2pdf geometry.ps ; \
         latex 1WF.tex ;      latex 1WF.tex ;      dvips -f 1WF.dvi > 1WF.ps ;           ps2pdf 1WF.ps ; \
         latex set_WFs.tex ;  latex set_WFs.tex ;  dvips -f set_WFs.dvi > set_WFs.ps ;   ps2pdf set_WFs.ps ; \
         latex noncol.tex ;   latex noncol.tex ;   dvips -f noncol.dvi > noncol.ps ;     ps2pdf noncol.ps ; \
         rm -f *log *aux *dvi *ps
	cd doc/macroave ; \
         latex macroave.tex ; latex macroave.tex ; dvips -f macroave.dvi > macroave.ps ; ps2pdf macroave.ps ; \
         rm -f *log *aux *dvi *ps

# Prepare the presentation document
presentation :
	cd doc/presentation ; \
         latex presentation.tex ; latex presentation.tex ; dvips -f presentation.dvi > presentation.ps ; ps2pdf presentation.ps ; \
         rm -f *log *aux *dvi *ps ; \
         gzip presentation.pdf

# For SMP machines. Before starting the -j4 option, one needs some pre-compilation
# to avoid spurious effects :
# the parallel libraries cannot be made with -j4, because the mpif.h file seem to be written/erased,
#  so that there are erratic error reports (and stop of the make) claiming mpif.h is not present.
#  The only exception is src/21paral_md, where there is only one file (hence no problem)
# So, in what follows the make of lib18seqparp.a is overlapped with the make of all other sequential libs
# (o during some period of time, 5 compilations are run). It should
#  not overlap with the make of lib21paral_mdp.a
multi:
if DO_BUILD_LINALG
	cd prereqs/linalg && $(MAKE) -j4 all
endif
if DO_BUILD_NETCDF
	cd plugins/netcdf && $(MAKE) -j4 all
endif
if DO_BUILD_BIGDFT
	cd plugins/bigdft && $(MAKE) -j4 all
endif
if DO_BUILD_WANNIER90
	cd plugins/wannier90 && $(MAKE) -j4 all
endif
if DO_BUILD_ETSF_IO
	cd plugins/etsf_io && $(MAKE) -j4 all
endif
if DO_BUILD_ETSF_XC
	cd plugins/etsf_xc && $(MAKE) -j4 all
endif
if DO_BUILD_FOX
	cd plugins/fox && $(MAKE) -j4 all
endif
if DO_BUILD_XMLF90
	cd plugins/xmlf90 && $(MAKE) -j4 all
endif
	cd src/defs && $(MAKE) 
	cd src/lib01hidempi && $(MAKE) liblib01hidempip.a
	cd src/lib01fftnew && $(MAKE) liblib01fftnewp.a
	cd src/01manage_mpi && $(MAKE) lib01manage_mpip.a
	cd src/13io_mpi && $(MAKE) lib13io_mpip.a
	cd src/14poisson && $(MAKE) lib14poissonp.a
	cd src/18seqpar && $(MAKE) lib18seqparp.a
	$(MAKE) -j4

# For SMP machines that cannot execute "make multi" because of "make -j4". Must be followed by the usual "make".
multi1:
	cd src/12nlstrain ; $(MAKE)
multi2:
	cd src/lib00macroav ; $(MAKE)
	cd src/lib01hidempi ; $(MAKE)
	cd src/lib01cg ; $(MAKE)
	cd src/01manage_mpi ; $(MAKE)
	cd src/12parser ; $(MAKE)
	cd src/13psp ; $(MAKE)
	cd src/13io_mpi ; $(MAKE)
	cd src/13nonlocal ; $(MAKE)
	cd src/13ionetcdf ; $(MAKE)
	cd src/13iovars ; $(MAKE)
	cd src/13paw ; $(MAKE)
	cd src/13xc ; $(MAKE)
	cd src/14bader ; $(MAKE)
	cd src/14occeig ; $(MAKE)
	cd src/15recursion ; $(MAKE)
	cd src/15rsprc ; $(MAKE)
	cd src/15common ; $(MAKE)
	cd src/17lwf ; $(MAKE)
	cd src/17ddb ; $(MAKE)
	cd src/19cut3d ; $(MAKE)
multi3:
	cd plugins/netcdf ; $(MAKE)
	cd plugins/etsf_io ; $(MAKE)
	cd src/lib01fftnew ; $(MAKE)
	cd src/00basis ; $(MAKE)
	cd src/11contract ; $(MAKE)
	cd src/11util ; $(MAKE)
	cd src/13recipspace ; $(MAKE)
	cd src/13xml ; $(MAKE)
	cd src/14poisson ; $(MAKE)
	cd src/15gw ; $(MAKE)
	cd src/16response ; $(MAKE)
	cd src/18seqpar ; $(MAKE)
multi4:
	cd plugins/linalg ; $(MAKE)
	cd src/lib00numeric ; $(MAKE)
	cd src/lib00numericf90 ; $(MAKE)
	cd src/12ffts ; $(MAKE)
	cd src/12geometry ; $(MAKE)
	cd src/12spacepar ; $(MAKE)
	cd src/14iowfdenpot ; $(MAKE)
	cd src/14wfs ; $(MAKE)
	cd src/16geomoptim ; $(MAKE)
	cd src/17suscep ; $(MAKE)
	cd src/21drive ; $(MAKE)
	cd src/21rdm ; $(MAKE)

multi_alt:
	cd src/defs ; $(MAKE)
	$(MAKE) multi1 &
	$(MAKE) multi2 &
	$(MAKE) multi3 &
	$(MAKE) multi4  

check_list:
	@cat $(top_srcdir)/doc/maintainers/check_list.txt

split_dist:
	util/maintainers/make-split-dist.sh 1
	tar -cvf abinitE-$(VERSION).tar abinit-$(VERSION)/tests/v*
	rm -fr abinit-$(VERSION)/tests/v*
	tar -cvf abinitD-$(VERSION).tar abinit-$(VERSION)/tests/Psps_for_tests
	rm -fr abinit-$(VERSION)/tests/Psps_for_tests
	tar -cvf abinitC-$(VERSION).tar abinit-$(VERSION)/tests
	rm -fr abinit-$(VERSION)/tests
	tar -cvf abinitB-$(VERSION).tar abinit-$(VERSION)/src abinit-$(VERSION)/plugins
	rm -fr abinit-$(VERSION)/src
	rm -fr abinit-$(VERSION)/plugins
	tar -cvf abinitA-$(VERSION).tar abinit-$(VERSION)
	rm -fr abinit-$(VERSION)
	gzip abinitA-$(VERSION).tar
	gzip abinitB-$(VERSION).tar
	gzip abinitC-$(VERSION).tar
	gzip abinitD-$(VERSION).tar
	gzip abinitE-$(VERSION).tar

# ---------------------------------------------------------------------------- #

# Generate binary tarball
abinit_binpkgdir = $(ABINIT_BINARY_PACKAGE)
binary_package:
	-rm -rf $(abinit_binpkgdir) $(abinit_binpkgdir).tgz
	mkdir -p $(abinit_binpkgdir)
	$(MAKE) $(MAKEFLAGS) distdir && \
	 chmod -R u+w $(distdir) && \
	 mv $(distdir) $(abinit_binpkgdir)
	$(MAKE) $(MAKEFLAGS) install DESTDIR=$(PWD)/$(abinit_binpkgdir)
	mkdir -p $(abinit_binpkgdir)/$(abinit_datdir)
	cd $(abinit_binpkgdir); \
	 mv $(distdir)/tests ./$(abinit_datdir); \
	 mv $(distdir)/util/users ./$(abinit_datdir); \
	 mv $(distdir)/extras/matlab_data_analysis ./$(abinit_datdir); \
	 mv $(distdir)/extras/post_processing ./$(abinit_datdir); \
	 rm -rf $(distdir); \
	 tardir=. && \
	 $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >../$(abinit_binpkgdir).tgz

bin_prep:
	rm -fr abinitbin-$(VERSION) abinitbin.tar abinitbin_seq-$(VERSION)* abinitbin_seqpar-$(VERSION)*
	mkdir abinitbin-$(VERSION)
	tar -cvf abinitbin.tar AUTHORS COPYING INSTALL KNOWN_PROBLEMS NEWS README* RELNOTES THANKS src \
            doc extras util tests/Psps* tests/v*/Input tests/tutorial tests/paral tests/buil* tests/Scripts tests/cpu
	mv abinitbin.tar abinitbin-$(VERSION)
	cd abinitbin-$(VERSION) ; tar -xvf abinitbin.tar ; \
            rm -fr abinitbin.tar ; \
            cd src ; rm -fr */*.a ; \
            rm -fr 00*/*.F90 ; rm -fr 00*/*.o ; \
            rm -fr 01*/*.F90 ; rm -fr 01*/*.o ; \
            rm -fr 11*/*.F90 ; rm -fr 11*/*.o ; \
            rm -fr 12*/*.F90 ; rm -fr 12*/*.o ; \
            rm -fr 13*/*.F90 ; rm -fr 13*/*.o ; \
            rm -fr 14*/*.F90 ; rm -fr 14*/*.o ; \
            rm -fr 15*/*.F90 ; rm -fr 15*/*.o ; \
            rm -fr 16*/*.F90 ; rm -fr 16*/*.o ; \
            rm -fr 17*/*.F90 ; rm -fr 17*/*.o ; \
            rm -fr 18*/*.F90 ; rm -fr 18*/*.o ; \
            rm -fr 19*/*.F90 ; rm -fr 19*/*.o ; \
            rm -fr */*.F90 ; rm -fr */*.o ; \
            cd ../tests ; rm -fr */,* ; cd .. ; \
            mkdir opt ; mv src/main/* opt ; rm -fr src ; \
            cp ../util/maintainers/Makefile_topdir_binarypack Makefile ; \
            cp ../util/maintainers/Makefile_testdir_binarypack tests/Makefile ; \
            cp ../util/maintainers/tests.env_bin tests/tests.env

bin_seq: bin_prep
	cd abinitbin-$(VERSION) ; rm -fr tests/paral opt/abi*nip
	tar -cvf abinitbin_seq-$(VERSION).tar abinitbin-$(VERSION)
	chmod 644 abinitbin_seq-$(VERSION).tar
	gzip abinitbin_seq-$(VERSION).tar
	rm -fr abinitbin-$(VERSION)

bin_seqpar: bin_prep
	tar -cvf abinitbin_seqpar-$(VERSION).tar abinitbin-$(VERSION)
	chmod 644 abinitbin_seqpar-$(VERSION).tar
	gzip abinitbin_seqpar-$(VERSION).tar
	cd abinitbin-$(VERSION) ; rm opt/abinip ; rm -fr tests/paral
	tar -cvf abinitbin_seq-$(VERSION).tar abinitbin-$(VERSION)
	chmod 644 abinitbin_seq-$(VERSION).tar
	gzip abinitbin_seq-$(VERSION).tar
	rm -fr abinitbin-$(VERSION)

